<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>viewList</name>
	<filePath>src/main/webapp/WEB-INF/views/${lastPackageName}/${moduleName}/${subModuleName}</filePath>
	<fileName>${className}List.jsp</fileName>
	<content><![CDATA[
<%@ page contentType="text/html;charset=UTF-8" %>
<%@ include file="/WEB-INF/views/include/taglib.jsp"%>
<html>
<head>
	<title>${functionNameSimple}管理</title>
	<meta name="decorator" content="default"/>
	   <%@ include file="/WEB-INF/views/include/listInclude.jsp" %>
</head>
<body>

	<form:form id="searchForm" action="${r"${ctx}"}/${urlPrefix}/" method="post" class="breadcrumb form-search">
		<ul class="ul-form">
		<#list table.columnList as c>
			<#if c.isQuery?? && c.isQuery == "1">
			<li><label>${c.comments}：</label>
			<#if c.showType == "input" || c.showType == "textarea">
				<form:input path="${c.javaFieldId}" htmlEscape="false"<#if c.dataLength != "0"> maxlength="${c.dataLength}"</#if> class="input-medium"/>
			<#elseif c.showType == "select">
				<form:select path="${c.javaFieldId}" class="input-medium">
					<form:option value="" label=""/>
					<form:options items="${"$"}{fns:getDictList('${c.dictType}')}" itemLabel="label" itemValue="value" htmlEscape="false"/>
				</form:select>
			<#elseif c.showType == "checkbox">
				<form:checkboxes path="${c.javaFieldId}" items="${"$"}{fns:getDictList('${c.dictType}')}" itemLabel="label" itemValue="value" htmlEscape="false"/>
			<#elseif c.showType == "radiobox">
				<form:radiobuttons path="${c.javaFieldId}" items="${"$"}{fns:getDictList('${c.dictType}')}" itemLabel="label" itemValue="value" htmlEscape="false"/>
			<#elseif c.showType == "dateselect" && c.queryType == "between">
				<input name="begin${c.simpleJavaField?cap_first}" type="text" readonly="readonly" maxlength="20" class="input-medium Wdate"
					value="<fmt:formatDate value="${"$"}{${className}.begin${c.simpleJavaField?cap_first}}" pattern="yyyy-MM-dd HH:mm:ss"/>"
					onclick="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss',isShowClear:false});"/> -
				<input name="end${c.simpleJavaField?cap_first}" type="text" readonly="readonly" maxlength="20" class="input-medium Wdate"
					value="<fmt:formatDate value="${"$"}{${className}.end${c.simpleJavaField?cap_first}}" pattern="yyyy-MM-dd HH:mm:ss"/>"
					onclick="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss',isShowClear:false});"/>
			<#elseif c.showType == "dateselect">
				<input name="${c.javaFieldId}" type="text" readonly="readonly" maxlength="20" class="input-medium Wdate"
					value="<fmt:formatDate value="${"$"}{${className}.${c.javaFieldId}}" pattern="yyyy-MM-dd HH:mm:ss"/>"
					onclick="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss',isShowClear:false});"/>
			<#elseif c.showType == "userselect">
				<sys:treeselect id="${c.simpleJavaField}" name="${c.javaFieldId}" value="${"$"}{${className}.${c.javaFieldId}}" labelName="${c.javaFieldName}" labelValue="${"$"}{${className}.${c.javaFieldName}}"
					title="用户" url="/sys/office/treeData?type=3" cssClass="input-small" allowClear="true" notAllowSelectParent="true"/>
			<#elseif c.showType == "officeselect">
				<sys:treeselect id="${c.simpleJavaField}" name="${c.javaFieldId}" value="${"$"}{${className}.${c.javaFieldId}}" labelName="${c.javaFieldName}" labelValue="${"$"}{${className}.${c.javaFieldName}}"
					title="部门" url="/sys/office/treeData?type=2" cssClass="input-small" allowClear="true" notAllowSelectParent="true"/>
			<#elseif c.showType == "areaselect">
				<sys:treeselect id="${c.simpleJavaField}" name="${c.javaFieldId}" value="${"$"}{${className}.${c.javaFieldId}}" labelName="${c.javaFieldName}" labelValue="${"$"}{${className}.${c.javaFieldName}}"
					title="区域" url="/sys/area/treeData" cssClass="input-small" allowClear="true" notAllowSelectParent="true"/>
			</#if>
			</li>
			</#if>
		</#list>
			<li class="btns">
			 <button id="btnSearch" type="button" class="btn btn-primary">
                <i class="icon-search" aria-hidden="true"></i>查询
            </button>
			<li class="clearfix"></li>
		</ul>
	</form:form>

	<div style="height: fit-content;">
    <div id="toolbar" role="group">
    </div>
    <table id="exampleTable" data-mobile-responsive="true" class="table-bordered table-condensed">
    </table>
	</div>



<script type="text/javascript">

    var prefix = ctx + '/sys/sysFunc';
    var WTable1;
    //字典
    var dict = {};
    <#list table.columnList as c>
		<#if c.isList?? && c.isList == "1" && c.showType == "select">
			dict["${c.dictType}"]=${r"${fns:getDictListJson()}"};
		</#if>
	</#list>

    $(function () {
        //根据权限加载按钮
        //initButton('${r"${param.menuid}"}');

        //构造bootstrap table的请求参数
        function queryParams(params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                order: params.order,
                sort: params.sort,
                searchParams: $("#searchForm").serialize()
            };
            return temp;
        }

        $("#btnSearch").click(function () {
            WTable1.reload({queryParams: queryParams});
        });


 var columns = [
 				<#list table.columnList as c>
					<#if c.isList?? && c.isList == "1">
				{
				field:'${c.name}',
				title: '${c.comments}',

					<#if c.showType == "select">
					formatter: function (value, row, index) {
                    return getDictLabel(dict["${c.dictType}"], value, '未知', true);
                }
					</#if>
				},
					</#if>
				</#list>

            {
                title: '操作',
                field: 'id',
                align: 'center',
                formatter: function (value, row,
                                     index) {
                    var e = '<a  href="#" title="编辑" onclick="edit(\'' + row.id + '\')">编辑</a> ';
                    var d = '<a  href="#" title="删除"  mce_href="#" onclick="remove(\'' + row.id + '\')">删除</i></a> ';
                    return e + d;
                }
            }];


     WTable1 = WTable.WBootstrapTable({
            elementId: "#exampleTable",
            deleteUrl: prefix,
            addUrl: prefix,
            editUrl: prefix,
            url: prefix + '/lists',
            columns: columns
        });
    });

    function add() {
        WTable1.add();
    }
    function edit(id) {
        WTable1.baseEdit({id: id});
    }
    function remove(id) {
        WTable1.baseRemove({id: id});
    }
    function reload() {
        WTable1.reload();
    }
</script>

</body>
</html>]]>
	</content>
</template>